openapi: 3.0.2
info:
  title: Orders API
  description: |-
    This is a sample Orders API
    
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.5
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: /api/v1
tags:
  - name: order
    description: Everything about your Orders
paths:
  /customer/{customerId}/order:
    get:
      tags:
        - order
      summary: Get Orders
      description: Returns a List of Orders. Limit to 1 for most recent order
      operationId: getOrdersByCustomer
      parameters:
        - name: customerId
          in: path
          description: ID of customer
          required: true
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          description: limit the number of results
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Invalid customerId supplied
        '204':
          description: Orders not found
      security:
        - api_key: []
        - petstore_auth:
            - 'read:orders'
  '/order/{orderId}':
    get:
      tags:
        - order
      summary: Find Order by ID
      description: Returns a single Order
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of Order to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
      security:
        - api_key: []
        - petstore_auth:
            - 'read:orders'
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        orderId:
          type: integer
          format: int64
          example: 198772
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        status:
          type: string
          description: Order Status
          example: ordered
          enum:
            - ordered
            - shipped
            - delivered
        complete:
          type: boolean
        shipingAddress:
          $ref: '#/components/schemas/Address'
        shipments:
          type: array
          description: shipments shipped to customer. Different items can arrive at different point of time, in which case the items will be in different shipments.
          items:
            $ref: '#/components/schemas/Shipment'
      xml:
        name: order
    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        name:
          type: string
          example: Apple Iphone XR
        plan:
          type: string
          example: 'AT&T Unlimited Extra'
        skuId:
          type: string
          example: 'sku1234'
        skuAttributes:
          type: object
          properties:
            model:
              type: string
              example: Iphone XR
            manufacturer:
              type: string
              example: Apple
            color:
              type: string
              example: Yellow
            size:
              type: string
              example: '64 GB'
        quantity:
          type: integer
          format: int32
          example: 1
        telephoneNumber:
          type: string
          example: 409.406.3322
        status:
          type: string
          description: Item Status
          example: ordered
          enum:
            - ordered
            - shipped
            - delivered
        complete:
          type: boolean
        estimatedShipDateRange:
          type: object
          description: Original Ship date promised to customer. It can change based on stock availability. We need to inform customer if it changes.
          properties:
            fromDate:
              type: string
              format: datetime
              example: "2020-09-06T13:39:52.774-05:00"
            toDate:
              type: string
              format: datetime
              example: "2020-09-06T13:39:52.774-05:00"
        newEstimatedShipDateRange:
          type: object
          properties:
            fromDate:
              type: string
              format: datetime
              example: "2020-10-02T13:39:52.774-05:00"
            toDate:
              type: string
              format: datetime
              example: "2020-10-02T13:39:52.774-05:00"
        userAcceptedDelay:
          type: boolean
          description: cutomer has accepted the delay, so we can use this to avoid showing the delay shipment alert.
      xml:
        name: item
    Address:
      type: object
      properties:
        street:
          type: string
          example: 437 Lytton
        city:
          type: string
          example: Palo Alto
        state:
          type: string
          example: CA
        zip:
          type: string
          example: '94301'
      xml:
        name: address
    Shipment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        items:
          type: array
          description: List of items shipped in this shipment
          items:
            type: integer
            format: int64
            example: 100000
        carrier:
          type: string
          example: USPS
        trackingNumber:
          type: string
          example: '9400100000000000000000'
        trackingUrl:
          type: string
          example: "https://tools.usps.com/go/TrackConfirmAction?tRef=fullpage&tLc=2&text28777=&tLabels=9400100000000000000000%2C"
        estimatedDeliveryDate:
          type: string
          format: datetime
          example: "2020-10-06T13:39:52.774-05:00"
        shipDate:
          type: string
          format: datetime
          example: "2020-10-02T13:39:52.774-05:00"
      xml:
        name: shipment
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: tag
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://api.myshop.com/oauth/authorize'
          scopes:
            'read:orders': read your orders
    api_key:
      type: apiKey
      name: api_key
      in: header
