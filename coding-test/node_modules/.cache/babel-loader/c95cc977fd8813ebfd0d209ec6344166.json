{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport { requestApiData, getOrderDetailsAPI, receiveApiData } from './actions';\nimport { REQUEST_API_DATA, GET_ORDER_DETAILS, RECEIVE_API_DATA } from './constants'; // import {fetchData} from './api'\n\nimport { ASYNC_FETCH, ASYNC_FETCH_SUCCESS } from './constants';\n\nfunction* getApiData(action) {\n  yield put({\n    type: ASYNC_FETCH\n  });\n\n  try {\n    debugger;\n    const apiResponse = yield call(getOrderDetailsAPI, action.orderId);\n    const order = {\n      apiResponse\n    };\n    console.log(\"getApiData---apiResponse\", apiResponse);\n\n    if (apiResponse) {\n      yield put({\n        type: RECEIVE_API_DATA,\n        response: apiResponse.data.data\n      });\n    } else {\n      console.log(\"getApiData--- Error\", apiResponse);\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  yield put({\n    type: ASYNC_FETCH_SUCCESS\n  });\n}\n\nexport default function* mySaga() {\n  yield takeLatest(REQUEST_API_DATA, getApiData);\n}","map":{"version":3,"sources":["C:/Users/Naveen/Desktop/Final/FEEngineer_Assignment/coding-test/src/pages/Home/sagas.js"],"names":["call","put","takeLatest","requestApiData","getOrderDetailsAPI","receiveApiData","REQUEST_API_DATA","GET_ORDER_DETAILS","RECEIVE_API_DATA","ASYNC_FETCH","ASYNC_FETCH_SUCCESS","getApiData","action","type","apiResponse","orderId","order","console","log","response","data","e","mySaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AAEA,SAASC,cAAT,EAAyBC,kBAAzB,EAA8CC,cAA9C,QAAoE,WAApE;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,EAA8CC,gBAA9C,QAAqE,aAArE,C,CACA;;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,aAAjD;;AAEA,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,QAAMX,GAAG,CAAC;AAAEY,IAAAA,IAAI,EAAEJ;AAAR,GAAD,CAAT;;AACC,MAAI;AACF;AACC,UAAMK,WAAW,GAAG,MAAMd,IAAI,CAACI,kBAAD,EAAqBQ,MAAM,CAACG,OAA5B,CAA9B;AACA,UAAMC,KAAK,GAAG;AAAEF,MAAAA;AAAF,KAAd;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCJ,WAAxC;;AACA,QAAGA,WAAH,EAAe;AACb,YAAMb,GAAG,CAAC;AAAEY,QAAAA,IAAI,EAAEL,gBAAR;AAA0BW,QAAAA,QAAQ,EAAEL,WAAW,CAACM,IAAZ,CAAiBA;AAArD,OAAD,CAAT;AACD,KAFD,MAEK;AACHH,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCJ,WAAnC;AACD;AACH,GAXD,CAWE,OAAOO,CAAP,EAAU;AACXJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACD;;AACD,QAAMpB,GAAG,CAAC;AAAEY,IAAAA,IAAI,EAAEH;AAAR,GAAD,CAAT;AACD;;AAED,eAAe,UAAUY,MAAV,GAAmB;AAChC,QAAMpB,UAAU,CAACI,gBAAD,EAAmBK,UAAnB,CAAhB;AACD","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects'\r\n\r\nimport { requestApiData, getOrderDetailsAPI,  receiveApiData } from './actions' \r\nimport { REQUEST_API_DATA, GET_ORDER_DETAILS, RECEIVE_API_DATA} from './constants'\r\n// import {fetchData} from './api'\r\nimport { ASYNC_FETCH, ASYNC_FETCH_SUCCESS } from './constants';\r\n\r\nfunction* getApiData(action) {\r\n  yield put({ type: ASYNC_FETCH });\r\n   try { \r\n     debugger\r\n      const apiResponse = yield call(getOrderDetailsAPI, action.orderId);\r\n      const order = { apiResponse };\r\n\r\n      console.log(\"getApiData---apiResponse\", apiResponse);\r\n      if(apiResponse){\r\n        yield put({ type: RECEIVE_API_DATA, response: apiResponse.data.data });\r\n      }else{\r\n        console.log(\"getApiData--- Error\", apiResponse);\r\n      }\r\n   } catch (e) {\r\n    console.log(e);  \r\n  }\r\n  yield put({ type: ASYNC_FETCH_SUCCESS });\r\n}\r\n\r\nexport default function* mySaga() {\r\n  yield takeLatest(REQUEST_API_DATA, getApiData);\r\n}\r\n "]},"metadata":{},"sourceType":"module"}