{"ast":null,"code":"import createHasError from '../hasError';\n\nvar createIsValid = function createIsValid(structure) {\n  var getIn = structure.getIn;\n  var hasError = createHasError(structure);\n  return function (form, getFormState, ignoreSubmitErrors) {\n    return function (state) {\n      var formState = getFormState(state);\n      var syncError = getIn(formState, form + '.syncError');\n\n      if (syncError) {\n        return false;\n      }\n\n      if (!ignoreSubmitErrors) {\n        var error = getIn(formState, form + '.error');\n\n        if (error) {\n          return false;\n        }\n      }\n\n      var syncErrors = getIn(formState, form + '.syncErrors');\n      var asyncErrors = getIn(formState, form + '.asyncErrors');\n      var submitErrors = ignoreSubmitErrors ? undefined : getIn(formState, form + '.submitErrors');\n\n      if (!syncErrors && !asyncErrors && !submitErrors) {\n        return true;\n      }\n\n      var registeredFields = getIn(formState, form + '.registeredFields') || [];\n      return !registeredFields.some(function (field) {\n        return hasError(field, syncErrors, asyncErrors, submitErrors);\n      });\n    };\n  };\n};\n\nexport default createIsValid;","map":{"version":3,"sources":["C:/Users/Naveen/Desktop/Final/FEEngineer_Assignment/coding-test/node_modules/redux-form-immutable/es/selectors/isValid.js"],"names":["createHasError","createIsValid","structure","getIn","hasError","form","getFormState","ignoreSubmitErrors","state","formState","syncError","error","syncErrors","asyncErrors","submitErrors","undefined","registeredFields","some","field"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,aAA3B;;AAEA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,SAAvB,EAAkC;AACpD,MAAIC,KAAK,GAAGD,SAAS,CAACC,KAAtB;AAEA,MAAIC,QAAQ,GAAGJ,cAAc,CAACE,SAAD,CAA7B;AACA,SAAO,UAAUG,IAAV,EAAgBC,YAAhB,EAA8BC,kBAA9B,EAAkD;AACvD,WAAO,UAAUC,KAAV,EAAiB;AACtB,UAAIC,SAAS,GAAGH,YAAY,CAACE,KAAD,CAA5B;AACA,UAAIE,SAAS,GAAGP,KAAK,CAACM,SAAD,EAAYJ,IAAI,GAAG,YAAnB,CAArB;;AACA,UAAIK,SAAJ,EAAe;AACb,eAAO,KAAP;AACD;;AACD,UAAI,CAACH,kBAAL,EAAyB;AACvB,YAAII,KAAK,GAAGR,KAAK,CAACM,SAAD,EAAYJ,IAAI,GAAG,QAAnB,CAAjB;;AACA,YAAIM,KAAJ,EAAW;AACT,iBAAO,KAAP;AACD;AACF;;AACD,UAAIC,UAAU,GAAGT,KAAK,CAACM,SAAD,EAAYJ,IAAI,GAAG,aAAnB,CAAtB;AACA,UAAIQ,WAAW,GAAGV,KAAK,CAACM,SAAD,EAAYJ,IAAI,GAAG,cAAnB,CAAvB;AACA,UAAIS,YAAY,GAAGP,kBAAkB,GAAGQ,SAAH,GAAeZ,KAAK,CAACM,SAAD,EAAYJ,IAAI,GAAG,eAAnB,CAAzD;;AACA,UAAI,CAACO,UAAD,IAAe,CAACC,WAAhB,IAA+B,CAACC,YAApC,EAAkD;AAChD,eAAO,IAAP;AACD;;AAED,UAAIE,gBAAgB,GAAGb,KAAK,CAACM,SAAD,EAAYJ,IAAI,GAAG,mBAAnB,CAAL,IAAgD,EAAvE;AACA,aAAO,CAACW,gBAAgB,CAACC,IAAjB,CAAsB,UAAUC,KAAV,EAAiB;AAC7C,eAAOd,QAAQ,CAACc,KAAD,EAAQN,UAAR,EAAoBC,WAApB,EAAiCC,YAAjC,CAAf;AACD,OAFO,CAAR;AAGD,KAvBD;AAwBD,GAzBD;AA0BD,CA9BD;;AAgCA,eAAeb,aAAf","sourcesContent":["import createHasError from '../hasError';\n\nvar createIsValid = function createIsValid(structure) {\n  var getIn = structure.getIn;\n\n  var hasError = createHasError(structure);\n  return function (form, getFormState, ignoreSubmitErrors) {\n    return function (state) {\n      var formState = getFormState(state);\n      var syncError = getIn(formState, form + '.syncError');\n      if (syncError) {\n        return false;\n      }\n      if (!ignoreSubmitErrors) {\n        var error = getIn(formState, form + '.error');\n        if (error) {\n          return false;\n        }\n      }\n      var syncErrors = getIn(formState, form + '.syncErrors');\n      var asyncErrors = getIn(formState, form + '.asyncErrors');\n      var submitErrors = ignoreSubmitErrors ? undefined : getIn(formState, form + '.submitErrors');\n      if (!syncErrors && !asyncErrors && !submitErrors) {\n        return true;\n      }\n\n      var registeredFields = getIn(formState, form + '.registeredFields') || [];\n      return !registeredFields.some(function (field) {\n        return hasError(field, syncErrors, asyncErrors, submitErrors);\n      });\n    };\n  };\n};\n\nexport default createIsValid;"]},"metadata":{},"sourceType":"module"}