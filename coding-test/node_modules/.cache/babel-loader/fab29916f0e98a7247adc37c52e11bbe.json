{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { getUserDetailsAPI } from \"./actions\";\nimport * as USER from './constants';\n\nfunction* getApiData(action) {\n  yield put({\n    type: USER.ASYNC_FETCH\n  });\n\n  try {\n    const apiResponse = yield call(getUserDetailsAPI, action.orderId);\n    const userInfo = apiResponse.data.data;\n    const data = {\n      userInfo\n    };\n    console.log(\"getApiData---apiResponse\", data);\n\n    if (apiResponse) {\n      yield put({\n        type: USER.USER_RESPONSE_RECEIVED,\n        response: apiResponse.data.data\n      });\n    } else {\n      yield put({\n        type: USER.PAGE_LOAD_API_ERROR\n      });\n    }\n  } catch (e) {\n    console.log(e);\n    yield put({\n      type: USER.PAGE_LOAD_API_ERROR\n    });\n  }\n\n  yield put({\n    type: USER.ASYNC_FETCH_SUCCESS\n  });\n}\n\nexport default function* mySaga() {\n  yield takeLatest(USER.LOAD_USER_API, getApiData);\n}","map":{"version":3,"sources":["C:/Users/Naveen/Desktop/Final/FEEngineer_Assignment/coding-test/src/pages/Home/sagas.js"],"names":["call","put","takeLatest","getUserDetailsAPI","USER","getApiData","action","type","ASYNC_FETCH","apiResponse","orderId","userInfo","data","console","log","USER_RESPONSE_RECEIVED","response","PAGE_LOAD_API_ERROR","e","ASYNC_FETCH_SUCCESS","mySaga","LOAD_USER_API"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,OAAO,KAAKC,IAAZ,MAAsB,aAAtB;;AAEA,UAAUC,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,QAAML,GAAG,CAAC;AAAEM,IAAAA,IAAI,EAAEH,IAAI,CAACI;AAAb,GAAD,CAAT;;AACA,MAAI;AACF,UAAMC,WAAW,GAAG,MAAMT,IAAI,CAACG,iBAAD,EAAoBG,MAAM,CAACI,OAA3B,CAA9B;AACA,UAAMC,QAAQ,GAAGF,WAAW,CAACG,IAAZ,CAAiBA,IAAlC;AACA,UAAMA,IAAI,GAAG;AAAED,MAAAA;AAAF,KAAb;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,IAAxC;;AACA,QAAIH,WAAJ,EAAiB;AACf,YAAMR,GAAG,CAAC;AAAEM,QAAAA,IAAI,EAAEH,IAAI,CAACW,sBAAb;AAAqCC,QAAAA,QAAQ,EAAEP,WAAW,CAACG,IAAZ,CAAiBA;AAAhE,OAAD,CAAT;AACD,KAFD,MAEO;AACL,YAAMX,GAAG,CAAC;AAAEM,QAAAA,IAAI,EAAEH,IAAI,CAACa;AAAb,OAAD,CAAT;AACD;AACF,GAXD,CAWE,OAAOC,CAAP,EAAU;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA,UAAMjB,GAAG,CAAC;AAAEM,MAAAA,IAAI,EAAEH,IAAI,CAACa;AAAb,KAAD,CAAT;AACD;;AACD,QAAMhB,GAAG,CAAC;AAAEM,IAAAA,IAAI,EAAEH,IAAI,CAACe;AAAb,GAAD,CAAT;AACD;;AAED,eAAe,UAAUC,MAAV,GAAmB;AAChC,QAAMlB,UAAU,CAACE,IAAI,CAACiB,aAAN,EAAqBhB,UAArB,CAAhB;AACD","sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { getUserDetailsAPI } from \"./actions\";\r\nimport * as USER from './constants';\r\n\r\nfunction* getApiData(action) {\r\n  yield put({ type: USER.ASYNC_FETCH });\r\n  try {\r\n    const apiResponse = yield call(getUserDetailsAPI, action.orderId);\r\n    const userInfo = apiResponse.data.data;\r\n    const data = { userInfo };\r\n\r\n    console.log(\"getApiData---apiResponse\", data);\r\n    if (apiResponse) {\r\n      yield put({ type: USER.USER_RESPONSE_RECEIVED, response: apiResponse.data.data });\r\n    } else {\r\n      yield put({ type: USER.PAGE_LOAD_API_ERROR });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n    yield put({ type: USER.PAGE_LOAD_API_ERROR });\r\n  }\r\n  yield put({ type: USER.ASYNC_FETCH_SUCCESS });\r\n}\r\n\r\nexport default function* mySaga() {\r\n  yield takeLatest(USER.LOAD_USER_API, getApiData);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}