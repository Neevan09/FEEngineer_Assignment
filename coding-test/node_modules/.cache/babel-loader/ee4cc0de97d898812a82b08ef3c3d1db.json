{"ast":null,"code":"import getValue from './getValue';\nimport isReactNative from '../isReactNative';\n\nvar createOnChange = function createOnChange(change) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      parse = _ref.parse,\n      normalize = _ref.normalize;\n\n  return function (event) {\n    // read value from input\n    var value = getValue(event, isReactNative); // parse value if we have a parser\n\n    if (parse) {\n      value = parse(value);\n    } // normalize value\n\n\n    if (normalize) {\n      value = normalize(value);\n    } // dispatch change action\n\n\n    change(value);\n  };\n};\n\nexport default createOnChange;","map":{"version":3,"sources":["C:/Users/Naveen/Desktop/Final/FEEngineer_Assignment/coding-test/node_modules/redux-form-immutable/es/events/createOnChange.js"],"names":["getValue","isReactNative","createOnChange","change","_ref","arguments","length","undefined","parse","normalize","event","value"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,MAAxB,EAAgC;AACnD,MAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;AAAA,MACIG,KAAK,GAAGJ,IAAI,CAACI,KADjB;AAAA,MAEIC,SAAS,GAAGL,IAAI,CAACK,SAFrB;;AAIA,SAAO,UAAUC,KAAV,EAAiB;AACtB;AACA,QAAIC,KAAK,GAAGX,QAAQ,CAACU,KAAD,EAAQT,aAAR,CAApB,CAFsB,CAItB;;AACA,QAAIO,KAAJ,EAAW;AACTG,MAAAA,KAAK,GAAGH,KAAK,CAACG,KAAD,CAAb;AACD,KAPqB,CAStB;;;AACA,QAAIF,SAAJ,EAAe;AACbE,MAAAA,KAAK,GAAGF,SAAS,CAACE,KAAD,CAAjB;AACD,KAZqB,CActB;;;AACAR,IAAAA,MAAM,CAACQ,KAAD,CAAN;AACD,GAhBD;AAiBD,CAtBD;;AAwBA,eAAeT,cAAf","sourcesContent":["import getValue from './getValue';\nimport isReactNative from '../isReactNative';\n\nvar createOnChange = function createOnChange(change) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      parse = _ref.parse,\n      normalize = _ref.normalize;\n\n  return function (event) {\n    // read value from input\n    var value = getValue(event, isReactNative);\n\n    // parse value if we have a parser\n    if (parse) {\n      value = parse(value);\n    }\n\n    // normalize value\n    if (normalize) {\n      value = normalize(value);\n    }\n\n    // dispatch change action\n    change(value);\n  };\n};\n\nexport default createOnChange;"]},"metadata":{},"sourceType":"module"}