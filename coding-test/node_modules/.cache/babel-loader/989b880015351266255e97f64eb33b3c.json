{"ast":null,"code":"import isEvent from './isEvent';\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, isReactNative) {\n  if (isEvent(event)) {\n    if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n      return event.nativeEvent.text;\n    }\n\n    if (isReactNative && event.nativeEvent !== undefined) {\n      return event.nativeEvent.text;\n    }\n\n    var _event$target = event.target,\n        type = _event$target.type,\n        value = _event$target.value,\n        checked = _event$target.checked,\n        files = _event$target.files,\n        dataTransfer = event.dataTransfer;\n\n    if (type === 'checkbox') {\n      return checked;\n    }\n\n    if (type === 'file') {\n      return files || dataTransfer && dataTransfer.files;\n    }\n\n    if (type === 'select-multiple') {\n      return getSelectedValues(event.target.options);\n    }\n\n    return value;\n  }\n\n  return event;\n};\n\nexport default getValue;","map":{"version":3,"sources":["C:/Users/Naveen/Desktop/Final/FEEngineer_Assignment/coding-test/node_modules/redux-form-immutable/es/events/getValue.js"],"names":["isEvent","getSelectedValues","options","result","index","length","option","selected","push","value","getValue","event","isReactNative","nativeEvent","text","undefined","_event$target","target","type","checked","files","dataTransfer"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;;AAEA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,OAA3B,EAAoC;AAC1D,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAID,OAAJ,EAAa;AACX,SAAK,IAAIE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,OAAO,CAACG,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;AACnD,UAAIE,MAAM,GAAGJ,OAAO,CAACE,KAAD,CAApB;;AACA,UAAIE,MAAM,CAACC,QAAX,EAAqB;AACnBJ,QAAAA,MAAM,CAACK,IAAP,CAAYF,MAAM,CAACG,KAAnB;AACD;AACF;AACF;;AACD,SAAON,MAAP;AACD,CAXD;;AAaA,IAAIO,QAAQ,GAAG,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,aAAzB,EAAwC;AACrD,MAAIZ,OAAO,CAACW,KAAD,CAAX,EAAoB;AAClB,QAAI,CAACC,aAAD,IAAkBD,KAAK,CAACE,WAAxB,IAAuCF,KAAK,CAACE,WAAN,CAAkBC,IAAlB,KAA2BC,SAAtE,EAAiF;AAC/E,aAAOJ,KAAK,CAACE,WAAN,CAAkBC,IAAzB;AACD;;AACD,QAAIF,aAAa,IAAID,KAAK,CAACE,WAAN,KAAsBE,SAA3C,EAAsD;AACpD,aAAOJ,KAAK,CAACE,WAAN,CAAkBC,IAAzB;AACD;;AACD,QAAIE,aAAa,GAAGL,KAAK,CAACM,MAA1B;AAAA,QACIC,IAAI,GAAGF,aAAa,CAACE,IADzB;AAAA,QAEIT,KAAK,GAAGO,aAAa,CAACP,KAF1B;AAAA,QAGIU,OAAO,GAAGH,aAAa,CAACG,OAH5B;AAAA,QAIIC,KAAK,GAAGJ,aAAa,CAACI,KAJ1B;AAAA,QAKIC,YAAY,GAAGV,KAAK,CAACU,YALzB;;AAOA,QAAIH,IAAI,KAAK,UAAb,EAAyB;AACvB,aAAOC,OAAP;AACD;;AACD,QAAID,IAAI,KAAK,MAAb,EAAqB;AACnB,aAAOE,KAAK,IAAIC,YAAY,IAAIA,YAAY,CAACD,KAA7C;AACD;;AACD,QAAIF,IAAI,KAAK,iBAAb,EAAgC;AAC9B,aAAOjB,iBAAiB,CAACU,KAAK,CAACM,MAAN,CAAaf,OAAd,CAAxB;AACD;;AACD,WAAOO,KAAP;AACD;;AACD,SAAOE,KAAP;AACD,CA3BD;;AA6BA,eAAeD,QAAf","sourcesContent":["import isEvent from './isEvent';\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n  return result;\n};\n\nvar getValue = function getValue(event, isReactNative) {\n  if (isEvent(event)) {\n    if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n      return event.nativeEvent.text;\n    }\n    if (isReactNative && event.nativeEvent !== undefined) {\n      return event.nativeEvent.text;\n    }\n    var _event$target = event.target,\n        type = _event$target.type,\n        value = _event$target.value,\n        checked = _event$target.checked,\n        files = _event$target.files,\n        dataTransfer = event.dataTransfer;\n\n    if (type === 'checkbox') {\n      return checked;\n    }\n    if (type === 'file') {\n      return files || dataTransfer && dataTransfer.files;\n    }\n    if (type === 'select-multiple') {\n      return getSelectedValues(event.target.options);\n    }\n    return value;\n  }\n  return event;\n};\n\nexport default getValue;"]},"metadata":{},"sourceType":"module"}