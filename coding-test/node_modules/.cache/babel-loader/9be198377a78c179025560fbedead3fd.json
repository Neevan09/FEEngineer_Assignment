{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectAsyncCallStatus = state => state.get('asyncCallStatus') || {};\n\nexport const selectState = state => state;\nexport const getUserDetails = createSelector(selectState, state => {\n  const userInfo = state.get('UserInfo');\n  const user = {\n    user: userInfo\n  };\n  return user;\n});\nexport const getCompanyDetails = createSelector(selectState, state => {\n  const companyInfo = state.get('CompanyInfo');\n  const company = {\n    home: companyInfo\n  };\n  return company;\n});\nexport const routerDetails = createSelector(selectState, state => {\n  const router = state.get('router'); // TODO SOE Mapping when Data points are available from the redux state.\n\n  const routerData = {\n    router: router\n  };\n  return routerData;\n});","map":{"version":3,"sources":["C:/Users/Naveen/Desktop/Final/FEEngineer_Assignment/coding-test/src/pages/Home/selectors.js"],"names":["createSelector","selectAsyncCallStatus","state","get","selectState","getUserDetails","userInfo","user","getCompanyDetails","companyInfo","company","home","routerDetails","router","routerData"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,qBAAqB,GAAIC,KAAD,IAAWA,KAAK,CAACC,GAAN,CAAU,iBAAV,KAAgC,EAAzE;;AACA,OAAO,MAAMC,WAAW,GAAIF,KAAD,IAAWA,KAA/B;AAEP,OAAO,MAAMG,cAAc,GAAGL,cAAc,CAACI,WAAD,EAAeF,KAAD,IAAW;AACjE,QAAMI,QAAQ,GAAGJ,KAAK,CAACC,GAAN,CAAU,UAAV,CAAjB;AACA,QAAMI,IAAI,GAAG;AACXA,IAAAA,IAAI,EAAED;AADK,GAAb;AAGA,SAAOC,IAAP;AACD,CANyC,CAArC;AASL,OAAO,MAAMC,iBAAiB,GAAGR,cAAc,CAACI,WAAD,EAAeF,KAAD,IAAW;AACtE,QAAMO,WAAW,GAAGP,KAAK,CAACC,GAAN,CAAU,aAAV,CAApB;AACA,QAAMO,OAAO,GAAG;AACdC,IAAAA,IAAI,EAAEF;AADQ,GAAhB;AAGA,SAAOC,OAAP;AACD,CAN8C,CAAxC;AAQP,OAAO,MAAME,aAAa,GAAGZ,cAAc,CAACI,WAAD,EAAeF,KAAD,IAAW;AAClE,QAAMW,MAAM,GAAGX,KAAK,CAACC,GAAN,CAAU,QAAV,CAAf,CADkE,CAElE;;AACA,QAAMW,UAAU,GAAG;AACjBD,IAAAA,MAAM,EAAEA;AADS,GAAnB;AAGA,SAAOC,UAAP;AACD,CAP0C,CAApC","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst selectAsyncCallStatus = (state) => state.get('asyncCallStatus') || {};\r\nexport const selectState = (state) => state;\r\n\r\nexport const getUserDetails = createSelector(selectState, (state) => {\r\n    const userInfo = state.get('UserInfo');\r\n    const user = {\r\n      user: userInfo,\r\n    };\r\n    return user;\r\n  });\r\n  \r\n\r\n  export const getCompanyDetails = createSelector(selectState, (state) => {\r\n    const companyInfo = state.get('CompanyInfo');\r\n    const company = {\r\n      home: companyInfo,\r\n    };\r\n    return company;\r\n  });\r\n\r\n  export const routerDetails = createSelector(selectState, (state) => {\r\n    const router = state.get('router');\r\n    // TODO SOE Mapping when Data points are available from the redux state.\r\n    const routerData = {\r\n      router: router,\r\n    };\r\n    return routerData;\r\n  });\r\n  "]},"metadata":{},"sourceType":"module"}