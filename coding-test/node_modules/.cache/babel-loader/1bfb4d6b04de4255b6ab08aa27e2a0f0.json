{"ast":null,"code":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nimport isPromise from 'is-promise';\nimport SubmissionError from './SubmissionError';\n\nvar handleSubmit = function handleSubmit(submit, props, valid, asyncValidate, fields) {\n  var dispatch = props.dispatch,\n      onSubmitFail = props.onSubmitFail,\n      onSubmitSuccess = props.onSubmitSuccess,\n      startSubmit = props.startSubmit,\n      stopSubmit = props.stopSubmit,\n      setSubmitFailed = props.setSubmitFailed,\n      setSubmitSucceeded = props.setSubmitSucceeded,\n      syncErrors = props.syncErrors,\n      touch = props.touch,\n      values = props.values,\n      persistentSubmitErrors = props.persistentSubmitErrors;\n  touch.apply(undefined, _toConsumableArray(fields)); // mark all fields as touched\n\n  if (valid || persistentSubmitErrors) {\n    var _ret = function () {\n      var doSubmit = function doSubmit() {\n        var result = void 0;\n\n        try {\n          result = submit(values, dispatch, props);\n        } catch (submitError) {\n          var error = submitError instanceof SubmissionError ? submitError.errors : undefined;\n          setSubmitFailed.apply(undefined, _toConsumableArray(fields));\n\n          if (onSubmitFail) {\n            onSubmitFail(error, dispatch, submitError);\n          }\n\n          if (error || onSubmitFail) {\n            // if you've provided an onSubmitFail callback, don't re-throw the error\n            return error;\n          } else {\n            throw submitError;\n          }\n        }\n\n        if (isPromise(result)) {\n          startSubmit();\n          return result.then(function (submitResult) {\n            stopSubmit();\n            setSubmitSucceeded();\n\n            if (onSubmitSuccess) {\n              onSubmitSuccess(submitResult, dispatch);\n            }\n\n            return submitResult;\n          }, function (submitError) {\n            var error = submitError instanceof SubmissionError ? submitError.errors : undefined;\n            stopSubmit(error);\n            setSubmitFailed.apply(undefined, _toConsumableArray(fields));\n\n            if (onSubmitFail) {\n              onSubmitFail(error, dispatch, submitError);\n            }\n\n            if (error || onSubmitFail) {\n              // if you've provided an onSubmitFail callback, don't re-throw the error\n              return error;\n            } else {\n              throw submitError;\n            }\n          });\n        } else {\n          setSubmitSucceeded();\n\n          if (onSubmitSuccess) {\n            onSubmitSuccess(result, dispatch);\n          }\n        }\n\n        return result;\n      };\n\n      var asyncValidateResult = asyncValidate && asyncValidate();\n\n      if (asyncValidateResult) {\n        return {\n          v: asyncValidateResult.then(function (asyncErrors) {\n            if (asyncErrors) {\n              throw asyncErrors;\n            }\n\n            return doSubmit();\n          }).catch(function (asyncErrors) {\n            setSubmitFailed.apply(undefined, _toConsumableArray(fields));\n\n            if (onSubmitFail) {\n              onSubmitFail(asyncErrors, dispatch, null);\n            }\n\n            return Promise.reject(asyncErrors);\n          })\n        };\n      } else {\n        return {\n          v: doSubmit()\n        };\n      }\n    }();\n\n    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n  } else {\n    setSubmitFailed.apply(undefined, _toConsumableArray(fields));\n\n    if (onSubmitFail) {\n      onSubmitFail(syncErrors, dispatch, null);\n    }\n\n    return syncErrors;\n  }\n};\n\nexport default handleSubmit;","map":{"version":3,"sources":["C:/Users/Naveen/Desktop/Final/FEEngineer_Assignment/coding-test/node_modules/redux-form-immutable/es/handleSubmit.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","isPromise","SubmissionError","handleSubmit","submit","props","valid","asyncValidate","fields","dispatch","onSubmitFail","onSubmitSuccess","startSubmit","stopSubmit","setSubmitFailed","setSubmitSucceeded","syncErrors","touch","values","persistentSubmitErrors","apply","undefined","_ret","doSubmit","result","submitError","error","errors","then","submitResult","asyncValidateResult","v","asyncErrors","catch","Promise","reject"],"mappings":"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","sourcesContent":["var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nimport isPromise from 'is-promise';\nimport SubmissionError from './SubmissionError';\n\nvar handleSubmit = function handleSubmit(submit, props, valid, asyncValidate, fields) {\n  var dispatch = props.dispatch,\n      onSubmitFail = props.onSubmitFail,\n      onSubmitSuccess = props.onSubmitSuccess,\n      startSubmit = props.startSubmit,\n      stopSubmit = props.stopSubmit,\n      setSubmitFailed = props.setSubmitFailed,\n      setSubmitSucceeded = props.setSubmitSucceeded,\n      syncErrors = props.syncErrors,\n      touch = props.touch,\n      values = props.values,\n      persistentSubmitErrors = props.persistentSubmitErrors;\n\n\n  touch.apply(undefined, _toConsumableArray(fields)); // mark all fields as touched\n\n  if (valid || persistentSubmitErrors) {\n    var _ret = function () {\n      var doSubmit = function doSubmit() {\n        var result = void 0;\n        try {\n          result = submit(values, dispatch, props);\n        } catch (submitError) {\n          var error = submitError instanceof SubmissionError ? submitError.errors : undefined;\n          setSubmitFailed.apply(undefined, _toConsumableArray(fields));\n          if (onSubmitFail) {\n            onSubmitFail(error, dispatch, submitError);\n          }\n          if (error || onSubmitFail) {\n            // if you've provided an onSubmitFail callback, don't re-throw the error\n            return error;\n          } else {\n            throw submitError;\n          }\n        }\n        if (isPromise(result)) {\n          startSubmit();\n          return result.then(function (submitResult) {\n            stopSubmit();\n            setSubmitSucceeded();\n            if (onSubmitSuccess) {\n              onSubmitSuccess(submitResult, dispatch);\n            }\n            return submitResult;\n          }, function (submitError) {\n            var error = submitError instanceof SubmissionError ? submitError.errors : undefined;\n            stopSubmit(error);\n            setSubmitFailed.apply(undefined, _toConsumableArray(fields));\n            if (onSubmitFail) {\n              onSubmitFail(error, dispatch, submitError);\n            }\n            if (error || onSubmitFail) {\n              // if you've provided an onSubmitFail callback, don't re-throw the error\n              return error;\n            } else {\n              throw submitError;\n            }\n          });\n        } else {\n          setSubmitSucceeded();\n          if (onSubmitSuccess) {\n            onSubmitSuccess(result, dispatch);\n          }\n        }\n        return result;\n      };\n\n      var asyncValidateResult = asyncValidate && asyncValidate();\n      if (asyncValidateResult) {\n        return {\n          v: asyncValidateResult.then(function (asyncErrors) {\n            if (asyncErrors) {\n              throw asyncErrors;\n            }\n            return doSubmit();\n          }).catch(function (asyncErrors) {\n            setSubmitFailed.apply(undefined, _toConsumableArray(fields));\n            if (onSubmitFail) {\n              onSubmitFail(asyncErrors, dispatch, null);\n            }\n            return Promise.reject(asyncErrors);\n          })\n        };\n      } else {\n        return {\n          v: doSubmit()\n        };\n      }\n    }();\n\n    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n  } else {\n    setSubmitFailed.apply(undefined, _toConsumableArray(fields));\n    if (onSubmitFail) {\n      onSubmitFail(syncErrors, dispatch, null);\n    }\n    return syncErrors;\n  }\n};\n\nexport default handleSubmit;"]},"metadata":{},"sourceType":"module"}